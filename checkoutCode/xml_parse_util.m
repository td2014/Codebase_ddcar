function xml_parse_util(xmlfile)%% Function to parse xml files.%% Anthony L. Daniell - 31 March 2017%[fid, msg] = fopen (xmlfile, "rt") ;# Do the actual I/O hereâ€¦depth=0 ;xml_header_block = [] ;doctype_header_block = [] ;tag_header_block = [] ;tagblock_tail = [] ;% main processing loopwhile (1)     data = fgetl(fid) ; %read line of data from xml file    if length(data)==0  % null        continue    elseif data==-1  %End of file        break    endif    %% process string%        iString = 0 ;    do        iString++ ;        curtest = data(iString) ;        if (curtest == " ") || (curtest == "\t")     % stay in start state - whitespace, tab            if iString == length(data) % completely blank line                break            else                continue            endif        elseif curtest == "<"  % move to prep state            iString++ ;            curtest = data(iString) ;            if curtest=="?"    % xml header block                do                    curtest=data(iString);                    xml_header_block = [xml_header_block curtest] ;                    iString++ ;                until curtest==">"  % exit xml header block            elseif curtest=="!"    % DOCTYPE header block                do                    curtest=data(iString);                    doctype_header_block = [doctype_header_block curtest] ;                    iString++ ;                until curtest==">"  % exit xml header block            elseif curtest=="/"  % tagblock tail                --depth ;                tagblock_tail = [] ;                do                    curtest=data(iString);                    tagblock_tail = [tagblock_tail curtest] ;                    iString++ ;                until curtest==">"            else  %assume regular xml tag                ++depth ;                tag_header_block = [] ;                do                    curtest=data(iString);                    tag_header_block = [tag_header_block curtest] ;                    iString++ ;                until curtest==">"  % exit tag header block                if iString==length(data)+1  % read next tag data line                    break                endif                % if we get here, we must be adding a value to the tag                do                    curtest=data(iString);                    tag_header_block = [tag_header_block curtest] ;                    iString++ ;                until curtest=="<"  % exit tag header block - value definition                curtest=data(iString);                if curtest == "/" % begin tag tail block                    --depth ;                    do                        curtest=data(iString);                        tag_header_block = [tag_header_block curtest] ;                        iString++ ;                    until curtest==">"  % exit tag header block - value definition                else                    error("xml_parse_util:  XML file is incorrectly formatted.  Halting.")                endif            endif        else            error("xml_parse_util:  XML file is incorrectly formatted.  Halting.")        endif%           until iString==length(data)+1%  endwhile  % EOF reached.%% Clean up and exit% fclose (fid);%% End of script%